'use strict';

const gulp = require('gulp');
const sass = require('gulp-sass');
const autoprefixer = require('gulp-autoprefixer');
const browserSync = require('browser-sync').create();

const sources = {
    "html": {
        "watch": [
            './src/**/*.html'
        ]
    },
    "js": {
        "watch": [
            './src/scripts/**/*.js'
        ]
    },
    "scss": {
        "compile": [
            './src/styles/scss/*.scss'
        ],
        "watch": [
            './src/styles/scss/**/*.scss'
        ]
    }
};

gulp.task('scss', function () {
    return gulp.src(sources.scss.compile)
        .pipe(sass().on('error', sass.logError))
        .pipe(autoprefixer())
        .pipe(gulp.dest('./src/styles/css'))
        .pipe(browserSync.stream());
});

gulp.task('html:watch', function () {
    gulp.watch(sources.html.watch).on('change', browserSync.reload);
});
gulp.task('js:watch', function () {
    gulp.watch(sources.js.watch).on('change', browserSync.reload);
});
gulp.task('scss:watch', function () {
    gulp.watch(sources.scss.watch, ['scss']);
});

gulp.task('watch', ['html:watch','js:watch', 'scss:watch']);

gulp.task('serve', ['scss'], function () {

    browserSync.init({
        server: {
            baseDir: './src',
            index: "template.html"
        }
    });

    gulp.start('watch');
});